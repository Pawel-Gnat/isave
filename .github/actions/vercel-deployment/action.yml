name: Deploy Vercel
description: Deploy Vercel in two modes

inputs:
  vercel-token:
    description: 'Vercel token'
    required: true
  mode:
    description: 'Deployment mode'
    required: true
  auth-secret:
    description: 'Auth secret'
    required: true
  database-url:
    description: 'Database URL'
    required: true
  openai-key:
    description: 'OpenAI key'
    required: true
  email-key:
    description: 'Email key'
    required: true
  email-name:
    description: 'Email name'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Install Vercel CLI
      run: npm install --global vercel@canary
      shell: bash

    - name: PRODUCTION Vercel Deployment
      if: ${{ inputs.mode == 'production' }}
      run: |
        vercel pull --yes --environment=production --token=${{ inputs.vercel-token }}
        vercel build --prod --token=${{ inputs.vercel-token }}
        vercel deploy --prebuilt --prod --token=${{ inputs.vercel-token }} --env NEXTAUTH_SECRET=${{ inputs.auth-secret }} --env DATABASE_URL=${{ inputs.database-url }} --env API_KEY=${{ inputs.openai-key }} --env EMAIL_KEY=${{ inputs.email-key }} --env EMAIL_NAME=${{ inputs.email-name }} --env NEXT_ENV='production'
      shell: bash

    - name: DEVELOPMENT Vercel Deployment
      if: ${{ inputs.mode == 'development' }}
      run: |
        vercel pull --yes --environment=development --token=${{ inputs.vercel-token }}
        vercel build --token=${{ inputs.vercel-token }}
        vercel deploy --prebuilt --token=${{ inputs.vercel-token }} --env NEXTAUTH_SECRET=${{ inputs.auth-secret }} --env DATABASE_URL=${{ inputs.database-url }} --env API_KEY=${{ inputs.openai-key }} --env EMAIL_KEY=${{ inputs.email-key }} --env EMAIL_NAME=${{ inputs.email-name }}  --env NEXT_ENV='development'
      shell: bash
